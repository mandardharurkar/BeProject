package com.ucan.answerMgmt.rest;

import java.util.List;

import javax.inject.Named;
import javax.ws.rs.DELETE;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.core.MediaType;

import org.springframework.beans.factory.annotation.Autowired;

import com.ucan.answerMgmt.service.QuestionAnswerService;
import com.ucan.sharedLib.Answer;
import com.ucan.sharedLib.Question;
import com.ucan.sharedLib.URLConstants;


@Named
@Path("/v1.0/")
public class QuestionAnswerRest 
{
	@Autowired
	QuestionAnswerService answerServe;

	/* Get function for answer belonging to particular question */
	@GET
	@Path(URLConstants.GET_QUESTION_ANSWERS_URL)
	@Produces({ MediaType.APPLICATION_JSON })
	public List<Answer> getAllAnswers(@PathParam("questionid") long questionId) {
		List<Answer> answerList = answerServe.getAllAnswers(questionId);
		return answerList;

	}
	
	/* Get function for answer belonging to particular user */
	@GET
	@Path(URLConstants.GET_USER_ANSWERS_URL)
	@Produces({ MediaType.APPLICATION_JSON })
	public List<Answer> getAllAnswersOfUsers(@PathParam("userid") long userId) {
		List<Answer> answerList = answerServe.getUserAllAnswers(userId);
		return answerList;

	}
	
	/* POST function to upvote a question */
	@POST
	@Path(URLConstants.POST_ANSWER_UPVOTE)
	@Produces({ MediaType.APPLICATION_JSON })
	public void upvoteQuestion(@PathParam("answerid") long aId) {
		answerServe.upvoteQuestion(aId);
	}
	
	/* POST function to downvote a question */
	@POST
	@Path(URLConstants.POST_ANSWER_DOWNVOTE)
	@Produces({ MediaType.APPLICATION_JSON })
	public void downvoteQuestion(@PathParam("questionid") long qId) {
		questionServe.downvoteQuestion(qId);
	}


}
